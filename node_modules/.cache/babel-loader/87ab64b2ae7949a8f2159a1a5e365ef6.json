{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Ingenieria/11vo Semestre/Taller de Integracio\\u0301n/Tarea 3/react-example/react-leaflet-demo-master/src/Chat.js\";\nimport React from 'react';\nimport io from 'socket.io-client';\nimport { Card, Avatar, Input, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nconst Search = Input.Search;\nconst Text = Typography.Text;\nconst Meta = Card.Meta;\nvar socket = io.connect('http://localhost:3000', {\n  'forceNew': true\n});\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onButtonClicked = value => {\n      const payload = {\n        message: value,\n        name: this.state.userName\n      };\n      this.setState({\n        messages: [...this.state.messages, payload]\n      });\n      this.socket.emit('new-chat-message', payload);\n      this.setState({\n        searchVal: ''\n      });\n    };\n\n    this.state = {\n      userName: 'Carlos',\n      messages: []\n    };\n  }\n\n  componentDidMount() {\n    this.socket = io('/');\n    this.socket.on('chat-message', message => {\n      this.setState({\n        messages: [...this.state.messages, message]\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Text, {\n      id: \"main-heading\",\n      type: \"secondary\",\n      style: {\n        fontSize: '36px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Websocket Chat: \", this.state.userName)), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingBottom: 50\n      },\n      id: \"messages\",\n      className: \"messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.messages.map(message => React.createElement(Card, {\n      key: message.message,\n      style: {\n        width: 300,\n        margin: '16px 4px 0 4px',\n        alignSelf: this.state.userName === message.name ? 'flex-end' : 'flex-start'\n      },\n      loading: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      avatar: React.createElement(Avatar, {\n        style: {\n          color: '#f56a00',\n          backgroundColor: '#fde3cf'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, message.name[0].toUpperCase()),\n      title: message.name + \":\",\n      description: message.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Search, {\n      placeholder: \"input message and send\",\n      enterButton: \"Send\",\n      value: this.state.searchVal,\n      size: \"large\",\n      onChange: e => this.setState({\n        searchVal: e.target.value\n      }),\n      onSearch: value => this.onButtonClicked(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Documents/Ingenieria/11vo Semestre/Taller de Integración/Tarea 3/react-example/react-leaflet-demo-master/src/Chat.js"],"names":["React","io","Card","Avatar","Input","Typography","Search","Text","Meta","socket","connect","MyForm","Component","constructor","props","onButtonClicked","value","payload","message","name","state","userName","setState","messages","emit","searchVal","componentDidMount","on","render","fontSize","display","flexDirection","paddingBottom","map","width","margin","alignSelf","color","backgroundColor","toUpperCase","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport io from 'socket.io-client';\nimport { Card, Avatar, Input, Typography } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst { Search } = Input;\nconst { Text } = Typography;\nconst { Meta } = Card;\n\nvar socket = io.connect('http://localhost:3000', {'forceNew':true});\n\nexport default class MyForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        userName: 'Carlos',\n        messages: [],\n    }\n  }\n\n  componentDidMount () {\n    this.socket = io('/')\n    this.socket.on('chat-message', message => {\n        this.setState({ messages: [...this.state.messages, message]})\n    })\n  }\n\n  onButtonClicked = (value) => {\n    const payload = {\n        message: value, \n        name: this.state.userName\n    }\n    this.setState({ messages: [...this.state.messages, payload]})\n    this.socket.emit('new-chat-message', payload)\n    this.setState({ searchVal: '' })\n\n  }\n\n  render() {\n\n    return(\n\n        <div>\n            \n            <div>\n                \n                <div className=\"title\">\n                    <Text id=\"main-heading\" type=\"secondary\" style={{ fontSize: '36px' }}>Websocket Chat: {this.state.userName}</Text>\n                </div>\n\n                <div style={{ display: 'flex', flexDirection: 'column', paddingBottom: 50}} id=\"messages\" className=\"messages\">\n                    {this.state.messages.map(message => \n                    <Card key={message.message} style={{ width: 300, margin: '16px 4px 0 4px', alignSelf: this.state.userName === message.name ? 'flex-end' : 'flex-start' }} loading={false}>\n                        <Meta\n                        avatar={\n                            <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>{message.name[0].toUpperCase()}</Avatar>\n                        }\n                        title={message.name+\":\"}\n                        description={message.message}\n                        />\n                    </Card> \n                    )}\n                </div>\n\n                <div className=\"bottom\">\n                    <Search\n                    placeholder=\"input message and send\"\n                    enterButton=\"Send\"\n                    value={this.state.searchVal}\n                    size=\"large\"\n                    onChange={(e) => this.setState({ searchVal: e.target.value })}\n                    onSearch={value => this.onButtonClicked(value)}\n                    />\n                </div> \n\n            </div>\n        </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}