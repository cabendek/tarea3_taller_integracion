{"ast":null,"code":"import React from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Card, Avatar, Input, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nconst Search = Input.Search;\nconst Text = Typography.Text;\nconst Meta = Card.Meta;\n\nconst io = require(\"socket.io-client\");\n\nconst socket = io.connect('ws://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n  path: '/flights'\n});\nsocket.on('POSITION', function (data) {\n  console.log(data); //render(data)\n});\n/*\nexport default class MyForm extends React.Component {\n\n    state ={\n        userName: '',\n        isLoggedIn: false,\n        messages: []\n    }\n\n    componentDidMount() {\n        client.onopen = () => {\n        console.log('WebSocket Client Connected');\n        };\n        client.onmessage = (message) => {\n        const dataFromServer = JSON.parse(message.data);\n        //console.log('got reply! ', dataFromServer);\n        if (dataFromServer.type === \"message\") {\n            this.setState((state) =>\n            ({\n                messages: [...state.messages,\n                {\n                msg: dataFromServer.msg,\n                user: dataFromServer.user\n                }]\n            })\n            );\n        }\n        };\n    }\n\n    onButtonClicked = (value) => {\n        client.send(JSON.stringify({\n        type: \"message\",\n        msg: value,\n        user: this.state.userName\n        }));\n        this.setState({ searchVal: '' })\n\n    }\n\n    render() {\n        return (\n          <div className=\"main\" id='wrapper'>\n            {this.state.isLoggedIn ?\n            <div>\n              <div className=\"title\">\n                <Text id=\"main-heading\" type=\"secondary\" style={{ fontSize: '36px' }}>Websocket Chat: {this.state.userName}</Text>\n              </div>\n              <div style={{ display: 'flex', flexDirection: 'column', paddingBottom: 50 }} id=\"messages\" className=\"messages\">\n                {this.state.messages.map(message => \n                  <Card key={message.msg} style={{ width: 300, margin: '16px 4px 0 4px', alignSelf: this.state.userName === message.user ? 'flex-end' : 'flex-start' }} loading={false}>\n                    <Meta\n                      avatar={\n                        <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>{message.user[0].toUpperCase()}</Avatar>\n                      }\n                      title={message.user+\":\"}\n                      description={message.msg}\n                    />\n                  </Card> \n                )}\n              </div>\n              <div className=\"bottom\">\n                <Search\n                  placeholder=\"input message and send\"\n                  enterButton=\"Send\"\n                  value={this.state.searchVal}\n                  size=\"large\"\n                  onChange={(e) => this.setState({ searchVal: e.target.value })}\n                  onSearch={value => this.onButtonClicked(value)}\n                />\n              </div> \n            </div>\n            :\n            <div style={{ padding: '200px 40px' }}>\n              <Search\n                placeholder=\"Enter Username\"\n                enterButton=\"Login\"\n                size=\"large\"\n                onSearch={value => this.setState({ isLoggedIn: true, userName: value })}\n              />\n            </div>\n          }\n          </div>\n        )\n    }\n}*/","map":{"version":3,"sources":["/Users/mac/Documents/Ingenieria/11vo Semestre/Taller de Integración/Tarea 3/react-example/react-leaflet-demo-master/src/Chat.js"],"names":["React","w3cwebsocket","W3CWebSocket","Card","Avatar","Input","Typography","Search","Text","Meta","io","require","socket","connect","path","on","data","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,UAA9B,QAAgD,MAAhD;AACA,OAAO,oBAAP;MAGQC,M,GAAWF,K,CAAXE,M;MACAC,I,GAASF,U,CAATE,I;MACAC,I,GAASN,I,CAATM,I;;AAER,MAAMC,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAW,sDAAX,EAAmE;AAC9EC,EAAAA,IAAI,EAAC;AADyE,CAAnE,CAAf;AAIAF,MAAM,CAACG,EAAP,CAAU,UAAV,EAAsB,UAASC,IAAT,EAAc;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADkC,CAElC;AACD,CAHD;AAIA","sourcesContent":["import React from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Card, Avatar, Input, Typography } from 'antd';\nimport 'antd/dist/antd.css';\n\n\nconst { Search } = Input;\nconst { Text } = Typography;\nconst { Meta } = Card;\n\nconst io = require(\"socket.io-client\")\nconst socket = io.connect('ws://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n    path:'/flights'\n});\n\nsocket.on('POSITION', function(data){\n  console.log(data);\n  //render(data)\n});\n/*\nexport default class MyForm extends React.Component {\n\n    state ={\n        userName: '',\n        isLoggedIn: false,\n        messages: []\n    }\n\n    componentDidMount() {\n        client.onopen = () => {\n        console.log('WebSocket Client Connected');\n        };\n        client.onmessage = (message) => {\n        const dataFromServer = JSON.parse(message.data);\n        //console.log('got reply! ', dataFromServer);\n        if (dataFromServer.type === \"message\") {\n            this.setState((state) =>\n            ({\n                messages: [...state.messages,\n                {\n                msg: dataFromServer.msg,\n                user: dataFromServer.user\n                }]\n            })\n            );\n        }\n        };\n    }\n\n    onButtonClicked = (value) => {\n        client.send(JSON.stringify({\n        type: \"message\",\n        msg: value,\n        user: this.state.userName\n        }));\n        this.setState({ searchVal: '' })\n\n    }\n\n    render() {\n        return (\n          <div className=\"main\" id='wrapper'>\n            {this.state.isLoggedIn ?\n            <div>\n              <div className=\"title\">\n                <Text id=\"main-heading\" type=\"secondary\" style={{ fontSize: '36px' }}>Websocket Chat: {this.state.userName}</Text>\n              </div>\n              <div style={{ display: 'flex', flexDirection: 'column', paddingBottom: 50 }} id=\"messages\" className=\"messages\">\n                {this.state.messages.map(message => \n                  <Card key={message.msg} style={{ width: 300, margin: '16px 4px 0 4px', alignSelf: this.state.userName === message.user ? 'flex-end' : 'flex-start' }} loading={false}>\n                    <Meta\n                      avatar={\n                        <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>{message.user[0].toUpperCase()}</Avatar>\n                      }\n                      title={message.user+\":\"}\n                      description={message.msg}\n                    />\n                  </Card> \n                )}\n              </div>\n              <div className=\"bottom\">\n                <Search\n                  placeholder=\"input message and send\"\n                  enterButton=\"Send\"\n                  value={this.state.searchVal}\n                  size=\"large\"\n                  onChange={(e) => this.setState({ searchVal: e.target.value })}\n                  onSearch={value => this.onButtonClicked(value)}\n                />\n              </div> \n            </div>\n            :\n            <div style={{ padding: '200px 40px' }}>\n              <Search\n                placeholder=\"Enter Username\"\n                enterButton=\"Login\"\n                size=\"large\"\n                onSearch={value => this.setState({ isLoggedIn: true, userName: value })}\n              />\n            </div>\n          }\n          </div>\n        )\n    }\n}*/"]},"metadata":{},"sourceType":"module"}